swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /test1/:
    get:
      tags:
      - test1
      description: get Test1
      operationId: Test1Controller.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test1'
        "403":
          description: ""
    post:
      tags:
      - test1
      description: create Test1
      operationId: Test1Controller.Post
      parameters:
      - in: body
        name: body
        description: body for Test1 content
        required: true
        schema:
          $ref: '#/definitions/models.Test1'
      responses:
        "201":
          description: '{int} models.Test1'
        "403":
          description: body is empty
  /test1/{id}:
    get:
      tags:
      - test1
      description: get Test1 by id
      operationId: Test1Controller.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test1'
        "403":
          description: :id is empty
    put:
      tags:
      - test1
      description: update the Test1
      operationId: Test1Controller.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Test1 content
        required: true
        schema:
          $ref: '#/definitions/models.Test1'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test1'
        "403":
          description: :id is not int
    delete:
      tags:
      - test1
      description: delete the Test1
      operationId: Test1Controller.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /test2/:
    get:
      tags:
      - test2
      description: get Test2
      operationId: Test2Controller.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test2'
        "403":
          description: ""
    post:
      tags:
      - test2
      description: create Test2
      operationId: Test2Controller.Post
      parameters:
      - in: body
        name: body
        description: body for Test2 content
        required: true
        schema:
          $ref: '#/definitions/models.Test2'
      responses:
        "201":
          description: '{int} models.Test2'
        "403":
          description: body is empty
  /test2/{id}:
    get:
      tags:
      - test2
      description: get Test2 by id
      operationId: Test2Controller.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test2'
        "403":
          description: :id is empty
    put:
      tags:
      - test2
      description: update the Test2
      operationId: Test2Controller.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Test2 content
        required: true
        schema:
          $ref: '#/definitions/models.Test2'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Test2'
        "403":
          description: :id is not int
    delete:
      tags:
      - test2
      description: delete the Test2
      operationId: Test2Controller.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Test1:
    title: Test1
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Test2Id:
        $ref: '#/definitions/models.Test2'
      Txt:
        type: string
  models.Test2:
    title: Test2
    type: object
    properties:
      Id:
        type: integer
        format: int64
tags:
- name: test2
  description: |
    Test2Controller operations for Test2
- name: test1
  description: |
    Test1Controller operations for Test1
